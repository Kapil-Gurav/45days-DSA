/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    // int temp;
    // int first = head.linkedlist.peekFirst();
    // int last = head.linkedlist.peekLast();
    // int n = head.indexOf(first);
    // int m = head.indexOf(last);
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null){
          return head;
        }
        
        ListNode prevNode = null;
        ListNode currNode = head;
        ListNode nextNode = null;

        while(currNode!=null){
            nextNode = currNode.next;
            currNode.next = prevNode;

           prevNode =  currNode;
           currNode = nextNode;
        }
        return prevNode;
    }
}
    
